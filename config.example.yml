connections: {}
#  mqtt:
#    url: mqtt://localhost

providers: {}
#  androidtv:
#    host: "ANDROID-TV-IP"
#    pair_port: 6467
#    port: 6466
#    cert: SELF-SIGNED-CERT.crt
#    key: SELF-SIGNED-CERT.key
#    service_name: SmartHome
#    model: SmartHome
#    manufacturer: iTimmer
#    secret: PAIRED-SECRET
#  hue:
#    host: "https://HUE-BRIDGE-IP"
#    key: HUE-API-KEY
#  slide:
#    email: SLIDE-EMAIL
#    password: SLIDE-PASSWORD
#  openmeteo:
#    latitude: LATITUDE
#    longitude: LONGITUDE
#  suncalc:
#    latitude: LATITUDE
#    longitude: LONGITUDE
#  denon:
#    host: "DENON-IP"
#  slide:
#    email: SLIDE-USERNAME
#    password: SLIDE-PASSWORD
#  philipstv:
#    url: "https://PHILIPS-TV-IP:1926/6"
#    username: PHILIPS-TV-USERNAME
#    password: PHILIPS-TV-PASSWORD
#  zwave:
#    port: /dev/ttyACM0
#    keys:
#      s2_unauthenticated: ZWAVE-S2-UNAUTHENTICATED-KEY-HEX
#      s2_authenticated: ZWAVE-S2-AUTHENTICATED-KEY-HEX
#      s2_access_control: ZWAVE-S2-ACCESS-CONTROL-KEY-HEX
#      s0: ZWAVE-S0-KEY-HEX
#  spotify:
#    client_id: SPOTIFY-CLIENT-ID
#    client_secret: SPOTIFY-CLIENT-SECRET
#    code: SPOTIFY-CODE
#    refresh_token: SPOTIFY-REFRESH-TOKEN

scenes: {}
#  example1:
#    name: Hue Off
#    id: provider:home
#    values:
#      "hue:GUID": { on: false }

rules: []
#  - script: rule.example.js
#    aliases:
#      sensor: "uuid:HUE-SENSOR-DEVICE-GUID"
#      lights: "hue:LIGHTS-UUID"
#    config:
#      keep_on: 5 #minutes
#      daylight_level: 16000
#      dark_level: 20000

history:
#  logger:
#    type: influxdb
#    url: "http://INFLUXDB-IP:8086"
#    token: INFLUXDB-TOKEN
#    organisation: Smarthome
#    bucket: Smarthome
  track: []
    # Example to track all temperature sensors
    #- service_type: temperatureSensor
    #  property_type: temperature
